<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.springboot.delivery.mapper.UserStoreMapper">
	<select id="storeCategory" parameterType="String"
		resultType="com.springboot.delivery.model.MenuCategory">
		select * from b_menu_category_tbl where store_id =
		#{store_id}
	</select>

	<select id="menuList" parameterType="Integer"
		resultType="com.springboot.delivery.model.MenuItem">
		select * from b_menu_item_tbl where menu_category_id =
		#{menu_category_id}
	</select>

	<select id="menuItemDetail" parameterType="Integer"
		resultType="com.springboot.delivery.model.MenuItem">
		select * from b_menu_item_tbl where menu_item_id =
		#{menu_item_id}
	</select>

	<select id="optionDetail" parameterType="Integer"
		resultType="com.springboot.delivery.model.OptionSet">
		SELECT
		o.option_id,
		o.option_name,
		o.option_price,
		o.store_id,
		o.menu_item_id,
		o.option_group_id,
		g.option_group_name
		FROM
		b_option_tbl o
		LEFT JOIN
		b_option_group_tbl g
		ON
		o.option_group_id = g.option_group_id
		WHERE
		o.menu_item_id = #{menu_item_id}
	</select>

	<insert id="insertOrder"
		parameterType="com.springboot.delivery.model.OrderCart">
		insert into b_order_tbl (order_id, user_id, order_time)
		values(#{order_id},#{user_id},sysdate)
	</insert>

	<insert id="insertOrderDetail"
		parameterType="com.springboot.delivery.model.OrderCart">
		insert into
		b_order_detail_tbl(order_detail_id,order_id,store_id,user_id,store_address,order_status)
		values((SELECT COALESCE(MAX(order_detail_id), 0) + 1 FROM
		b_order_detail_tbl),#{order_id},#{store_id},#{user_id},#{store_address},#{order_status})
	</insert>

	<insert id="insertOrderOption"
		parameterType="com.springboot.delivery.model.OrderCart">
		insert into order_option_tbl(order_option_id,
		menu_item_id, option_group_id,
		option_id, order_id)
		values
		(#{order_option_id},
		#{menu_item_id},
		#{option_group_id},
		#{option_id},
		#{order_id}
		)

	</insert>
	<select id="getMaxCountOrderOption" resultType="Integer">

		select max(order_option_id) from order_option_tbl

	</select>

	<insert id="insertOrderItemQuantity"
		parameterType="com.springboot.delivery.model.OrderQuantity">

		insert into order_quantity_tbl values(#{order_option_id}, #{quantity},
		#{order_id})

	</insert>

	<select id="storeAddress" parameterType="String"
		resultType="String">
		select store_address from b_store_tbl where
		store_id=#{store_id}
	</select>

	<select id="getOrderByUserId" parameterType="String"
		resultType="com.springboot.delivery.model.OrderCart">

		select order_id from b_order_tbl where user_id=#{user_id}

	</select>

	<select id="getOrderStatusByOrderId" parameterType="String"
		resultType="com.springboot.delivery.model.OrderCart">

		select order_id, order_status from b_order_detail_tbl where
		order_id =
		#{order_id} and order_status = '0'

	</select>

	<select id="getCartMenuDetails" parameterType="String"
		resultType="map">
		SELECT
		mi.menu_item_id,
		mi.menu_name,
		mi.price as menu_price,
		mi.image_name,
		mi.store_id,
		oo.order_option_id,
		o.order_id,
		oq.quantity,
		LISTAGG(ot.option_name, ', ') WITHIN GROUP (ORDER BY ot.option_name) as option_names,
		LISTAGG(TO_CHAR(ot.option_price), ', ') WITHIN GROUP (ORDER BY
		ot.option_name) as option_prices,
		SUM(COALESCE(ot.option_price, 0)) as total_option_price
		FROM
		b_order_tbl o
		JOIN
		b_order_detail_tbl odt ON o.order_id = odt.order_id
		JOIN
		order_option_tbl oo ON oo.order_id = o.order_id
		JOIN
		b_menu_item_tbl mi ON oo.menu_item_id = mi.menu_item_id
		LEFT JOIN
		b_option_tbl ot ON ot.option_id = oo.option_id
		LEFT JOIN
		order_quantity_tbl oq ON oq.order_option_id = oo.order_option_id
		WHERE
		o.user_id = #{user_id}
		AND
		odt.order_status = '0'
		GROUP BY
		mi.menu_item_id, mi.menu_name, mi.price, mi.image_name, mi.store_id,
		oo.order_option_id, o.order_id, oq.quantity
	</select>

	<select id="isMenuInCart" parameterType="String"
		resultType="String">

		select order_id from b_order_tbl where user_id = #{user_id}

	</select>

	<select id="findMatchingOptionId"
		parameterType="com.springboot.delivery.model.MatchingOptionParam"
		resultType="Integer">
		SELECT oo1.ORDER_OPTION_ID
		FROM order_option_tbl oo1
		WHERE oo1.ORDER_ID = #{orderId}
		AND oo1.MENU_ITEM_ID = #{menuItemId}
		<foreach collection="optionList" item="option">
			AND EXISTS (
			SELECT 1
			FROM order_option_tbl oo
			WHERE oo.ORDER_OPTION_ID = oo1.ORDER_OPTION_ID
			AND oo.OPTION_GROUP_ID = #{option.option_group_id}
			AND oo.OPTION_ID = #{option.option_id}
			)
		</foreach>
		AND (
		SELECT COUNT(*)
		FROM order_option_tbl oo
		WHERE oo.ORDER_OPTION_ID = oo1.ORDER_OPTION_ID
		) = #{optionCount}
		GROUP BY oo1.ORDER_OPTION_ID
	</select>

	<update id="increaseQuantity"
		parameterType="com.springboot.delivery.model.QuantityUpdateParam">
		UPDATE order_quantity_tbl
		SET QUANTITY = QUANTITY + #{additionalQuantity}
		WHERE ORDER_OPTION_ID = #{orderOptionId}
		AND ORDER_ID = #{orderId}
	</update>

	<delete id="deleteItemInCart" parameterType="String">


		delete from order_option_tbl where menu_item_id=#{menu_item_id}

	</delete>

	<select id="checkCountInCart" parameterType="String"
		resultType="Integer">

		select count(*) from order_option_tbl where order_id=#{order_id}

	</select>

	<delete id="deleteOrderDetail" parameterType="String">

		delete from b_order_detail_tbl where order_id=#{order_id}

	</delete>

	<delete id="deleteOrder" parameterType="String">

		delete from b_order_tbl where order_id=#{order_id}

	</delete>

	<select id="getOrderOptionId" parameterType="String"
		resultType="Integer">
		SELECT MAX(ORDER_OPTION_ID) FROM order_option_tbl WHERE ORDER_ID =
		#{orderId}
	</select>





</mapper>